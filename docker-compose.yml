version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: takeoff_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: Jon
      POSTGRES_PASSWORD: Transplant4real
      POSTGRES_DB: takeoff_pricing_db
      # Performance optimizations
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "127.0.0.1:5432:5432"  # Bind to localhost only for security
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d:ro  # Read-only for security
      - ./logs:/var/log/postgresql  # Log persistence
    networks:
      - postgres_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U Jon -d takeoff_pricing_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: >
      postgres
      -c logging_collector=on
      -c log_destination=stderr
      -c log_directory=/var/log/postgresql
      -c log_filename=postgresql-%Y-%m-%d.log
      -c log_rotation_age=1d
      -c log_rotation_size=100MB
      -c shared_preload_libraries=pg_stat_statements
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c work_mem=4MB
      -c maintenance_work_mem=64MB
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

volumes:
  pgdata:
    driver: local

networks:
  postgres_network:
    driver: bridge
